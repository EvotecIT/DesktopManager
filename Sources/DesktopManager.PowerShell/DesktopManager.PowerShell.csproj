<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;net472;net8.0</TargetFrameworks>
        <Description>PowerShell Module for working Windows Desktop</Description>
        <AssemblyName>DesktopManager.PowerShell</AssemblyName>
        <AssemblyTitle>DesktopManager.PowerShell</AssemblyTitle>
        <VersionPrefix>3.0.0</VersionPrefix>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <Company>Evotec</Company>
        <Authors>Przemyslaw Klys</Authors>
        <LangVersion>latest</LangVersion>
        <Copyright>(c) 2011 - 2025 Przemyslaw Klys @ Evotec. All rights reserved.</Copyright>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="PowerShellStandard.Library" Version="5.1.1" PrivateAssets="all" />
        <PackageReference Include="System.Drawing.Common" Version="8.0.0" />
    </ItemGroup>

    <PropertyGroup>
        <!-- Make sure the output DLL's from library are included in the output -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    </PropertyGroup>
    <ItemGroup>
        <ProjectReference Include="..\DesktopManager\DesktopManager.csproj" />
    </ItemGroup>
    <ItemGroup>
        <Using Include="System.Runtime.InteropServices" />
        <Using Include="System" />
        <Using Include="System.Collections.Generic" />
        <Using Include="System.Management.Automation" />
        <Using Include="System.Threading.Tasks" />
        <Using Include="DesktopManager" />
    </ItemGroup>

    <ItemGroup>
        <!-- This is needed for XmlDoc2CmdletDoc to generate a PowerShell documentation. DLL itself
        will be removed/hidden -->
        <PackageReference Include="MatejKafka.XmlDoc2CmdletDoc" Version="0.6.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <PropertyGroup>
        <!-- This is needed for XmlDoc2CmdletDoc to generate a PowerShell documentation. -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
    </PropertyGroup>

    <Target Name="CopyDocumentationToPublishFolder" AfterTargets="GenerateDocumentationFile;Publish">
        <!-- This is needed for XmlDoc2CmdletDoc to copy a PowerShell documentation file to Publish
        folder -->
        <ItemGroup>
            <DocFiles Include="$(OutputPath)$(AssemblyName).dll-Help.xml" />
        </ItemGroup>
        <Copy SourceFiles="@(DocFiles)" DestinationFolder="$(PublishDir)" />
    </Target>
</Project>